#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# debug
# set -x

shopt -s extglob

function error() {
  echo " !     $*" >&2
  exit 1
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

function build() {
  echo ----------------------------------------------------------------------
  echo Building $@...
  echo ----------------------------------------------------------------------
  echo
  pushd $1
    ./configure --prefix=$VENDOR_DIR/$2 ${@:3} > /dev/null 2>&1
    echo "configure finished" | indent
    make
    echo "make finished" | indent
    make install > /dev/null 2>&1
    echo "install finished" | indent
    make clean > /dev/null 2>&1
    echo "clean finished" | indent
  popd > /dev/null
  echo
  echo

  # add to libraries and pkg-config
  export LD_LIBRARY_PATH="$VENDOR_DIR/$2/lib:$LD_LIBRARY_PATH"
  export PKG_CONFIG_PATH="$VENDOR_DIR/$2/lib/pkgconfig:$PKG_CONFIG_PATH"

}

function download() {
  if [ ! -f "$2" ]; then
    echo Downloading $2...
    curl $1 -o $2 -s -S
  else
    echo Got $2...
  fi
}

# clean up leaking environment
unset GIT_DIR

# parse and derive params
BUILD_DIR=$1
CACHE_DIR="$2/vendor"
LP_DIR=`cd $(dirname $0); cd ..; pwd`
BUILDPACK_DIR="$(dirname $(dirname $0))"
# config
BUILD_PACK_VERSION="20130729"
GCC_VERSION="4.9"
GLIBC_VERSION="2.23"
R_VERSION="3.2.5"
R_BINARIES="https://content-na.drive.amazonaws.com/cdproxy/templink/ldWBfoe8y9z6PMxtj5oC3V-KCo3Kow6HVOVHHei9M_4E0Xnc3?download=true"
VENDOR_DIR="$BUILD_DIR/vendor"
R_HOME="$VENDOR_DIR/R"
CRAN_MIRROR="http://cran.cnr.berkeley.edu/"
echo "input variable 1 = $1"| indent
echo "input variable 2 = $2"| indent
echo "BUILD_DIR = $BUILD_DIR "| indent
echo "CACHE_DIR = $CACHE_DIR"| indent
echo "LP_DIR = $LP_DIR"| indent
echo "BUILDPACK_DIR = $BUILDPACK_DIR"| indent
echo "BUILD_PACK_VERSION = $BUILD_PACK_VERSION"| indent
echo "GCC_VERSION = $GCC_VERSION"| indent
echo "GLIBC_VERSION = $GLIBC_VERSION"| indent
echo "R_VERSION = $R_VERSION"| indent
echo "R_BINARIES = $R_BINARIES"| indent
echo "VENDOR_DIR = $VENDOR_DIR"| indent
echo "R_HOME = $R_HOME"| indent
echo "CRAN_MIRROR = $CRAN_MIRROR"| indent

mkdir -p $CACHE_DIR

# vendor R into the slug
echo "Vendoring R $R_VERSION" | indent

# download and unpack binaries
echo "Downloading and unpacking R binaries" | indent
mkdir -p $VENDOR_DIR && mkdir -p /app/vendor
echo "mkdir $VENDOR_DIR complete"| indent
curl $R_BINARIES -s -o r_binaries.tar.gz
echo "curl $R_BINARIES complete"| indent
tar xzf r_binaries.tar.gz -C $VENDOR_DIR
echo "tar unpack complete"| indent
rm r_binaries.tar.gz

echo "Directory created, R pulled, unpacked" | indent

# need to copy the binaries to /app/vendor so that R works
cp -Rv $VENDOR_DIR/gcc-$GCC_VERSION /app/vendor/gcc-$GCC_VERSION
cp -Rv $VENDOR_DIR/glibc-$GLIBC_VERSION /app/vendor/glibc-$GLIBC_VERSION
#cp -R $VENDOR_DIR/readline /app/vendor/readline
cp -Rv $VENDOR_DIR/R /app/vendor/R

echo "Stuff copied" | indent


# R needs to know where gfortran and glibc header files are
export PATH=/app/vendor/R/bin:/app/vendor/gcc-$GCC_VERSION/bin:$PATH
export LDFLAGS="-L/app/vendor/gcc-$GCC_VERSION/lib64/"
export CPPFLAGS="-I/app/vendor/glibc-$GLIBC_VERSION/string/ -I/app/vendor/glibc-$GLIBC_VERSION/time -I/usr/include/x86_64-linux-gnu/sys -I/usr/include/x86_64-linux-gnu/gnu"
export R_HOME=/app/vendor/R
export R_INCLUDE=$R_HOME/lib64/R/include
export LD_LIBRARY_PATH="/lib:/usr/lib:/usr/lib/x86_64-linux-gnu:$R_HOME/lib64:$LD_LIBRARY_PATH"
export LIBRARY_PATH="/lib:/usr/lib:/usr/lib/x86_64-linux-gnu:$R_HOME/lib64:$LD_LIBRARY_PATH"
echo "PATH =$PATH"| indent
echo "LDFLAGS =$LDFLAGS"| indent
echo "CPPFLAGS =$CPPFLAGS"| indent
echo "R_HOME =$R_HOME"| indent
echo "R_INCLUDE =$R_INCLUDE"| indent
echo "LD_LIBRARY_PATH =$LD_LIBRARY_PATH"| indent
echo "LIBRARY_PATH =$LIBRARY_PATH"| indent

#ln -s /usr/lib/libreadline.so $R_HOME/lib64/libreadline.so.5 2>&1
ln -s /usr/lib/x86_64-linux-gnu/libreadline.so $R_HOME/lib64/libreadline.so.5 2>&1
ln -s /usr/lib/x86_64-linux-gnu/libmpfr.so.4.1.2 $R_HOME/lib64/libmpfr.so.1 2>&1
ln -s /usr/lib/x86_64-linux-gnu/libgmp.so.10.1.3 $R_HOME/lib64/libgmp.so.3 2>&1
ln -s /usr/lib/x86_64-linux-gnu/crti.o $R_HOME/lib64/crti.o 2>&1

#mkdir $R_INCLUDE/sys
#mkdir $R_INCLUDE/gnu
#mkdir $R_INCLUDE/bits
#mkdir $R_INCLUDE/asm

#cp -R /usr/include/x86_64-linux-gnu/sys/* $R_INCLUDE/sys
#cp -R /usr/include/x86_64-linux-gnu/gnu/* $R_INCLUDE/gnu
#cp -R /usr/include/x86_64-linux-gnu/bits/* $R_INCLUDE/bits
#cp -R /usr/include/x86_64-linux-gnu/asm/* $R_INCLUDE/asm
cp -R /usr/include/x86_64-linux-gnu/* $R_INCLUDE
cp -R /usr/include/* $R_INCLUDE

export CPATH=/usr/lib/x86_64-linux-gnu:$R_INCLUDE

echo "CPATH = $CPATH"| indent

echo "variables set" | indent

# copy over environment
mkdir -p $BUILD_DIR/.profile.d
cp "$BUILDPACK_DIR/bin/r_environment.sh" $BUILD_DIR/.profile.d/r_environment.sh

echo "environment copied" | indent

# prevent warnings
mkdir -p /app/vendor/R/lib64/R/doc/html
touch /app/vendor/R/lib64/R/doc/html/R.css


# add ldpaths to existing space

echo "R_HOME points to: $R_HOME"| indent

echo "attempting file copy"| indent
cp -Rv app/vendor/R/lib64/R/etc/ldpaths* $R_HOME/etc
cp -Rv /usr/include/* $R_INCLUDE
