#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# debug
# set -x

shopt -s extglob

function error() {
  echo " !     $*" >&2
  exit 1
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

function build() {
  echo ----------------------------------------------------------------------
  echo Building $@...
  echo ----------------------------------------------------------------------
  echo
  pushd $1
    ./configure --prefix=$VENDOR_DIR/$2 ${@:3} > /dev/null 2>&1
    echo "configure finished" | indent
    make
    echo "make finished" | indent
    make install > /dev/null 2>&1
    echo "install finished" | indent
    make clean > /dev/null 2>&1
    echo "clean finished" | indent
  popd > /dev/null
  echo
  echo

  # add to libraries and pkg-config
  export LD_LIBRARY_PATH="$VENDOR_DIR/$2/lib:$LD_LIBRARY_PATH"
  export PKG_CONFIG_PATH="$VENDOR_DIR/$2/lib/pkgconfig:$PKG_CONFIG_PATH"

}

function download() {
  if [ ! -f "$2" ]; then
    echo Downloading $2...
    curl $1 -o $2 -s -S
  else
    echo Got $2...
  fi
}

# clean up leaking environment
unset GIT_DIR

lsb_release -a
# parse and derive params
BUILD_DIR=$1
CACHE_DIR="$2/vendor"
LP_DIR=`cd $(dirname $0); cd ..; pwd`
BUILDPACK_DIR="$(dirname $(dirname $0))"
# config
BUILD_PACK_VERSION="20130729"
GCC_VERSION="4.9"
GLIBC_VERSION="2.23"
R_VERSION="3.3.1"

R_BINARIES="https://media.githubusercontent.com/media/rddill-IBM/CF_R_Buildpack/master/r_cf_build.tar.gz"
VENDOR_DIR="$BUILD_DIR/vendor"
R_HOME="$VENDOR_DIR/R"
CRAN_MIRROR="http://cran.cnr.berkeley.edu/"
echo "input variable 1 = $1"| indent
echo "input variable 2 = $2"| indent
echo "BUILD_DIR = $BUILD_DIR "| indent
echo "CACHE_DIR = $CACHE_DIR"| indent
echo "LP_DIR = $LP_DIR"| indent
echo "BUILDPACK_DIR = $BUILDPACK_DIR"| indent
echo "BUILD_PACK_VERSION = $BUILD_PACK_VERSION"| indent
echo "GCC_VERSION = $GCC_VERSION"| indent
echo "GLIBC_VERSION = $GLIBC_VERSION"| indent
echo "R_VERSION = $R_VERSION"| indent
echo "R_BINARIES = $R_BINARIES"| indent
echo "VENDOR_DIR = $VENDOR_DIR"| indent
echo "R_HOME = $R_HOME"| indent
echo "CRAN_MIRROR = $CRAN_MIRROR"| indent

mkdir -p $CACHE_DIR

# vendor R into the slug
echo "Vendoring R $R_VERSION" |
apt-get install g++
apt-get install gfortran
apt-get install libreadline6-dev
apt-get install libx11-dev
apt-get install libxt-dev
apt-get install tk-dev
apt-get install libpng12-dev
apt-get install libjpeg-dev
apt-get install libtiff4-dev
apt-get install libcairo2-dev
apt-get install curl
apt-get install libcurl4-openssl-dev
curl http://cran.fhcrc.org/src/base/R-3/R-3.3.1.tar.gz -s -o R-3.3.1.tar.gz
mkdir -p $VENDOR_DIR && mkdir -p /app/vendor
mkdir -p $VENDOR_DIR/R && mkdir -p /app/vendor/R
tar xzf R-3.3.1.tar.gz $VENDOR_DIR/R
cd app/vendor/R/
../../../$VENDOR_DIR/R/configure && make

echo "Executing init.r script" | indent

# set the CRAN mirror and run the init.r program
 R -s <<RPROG
   Sys.setenv(BUILD_DIR="$BUILD_DIR")
   print("Sys.setenv complete")
   setwd("$BUILD_DIR")
   print("setwd complete")
   r <- getOption("repos");
   print(r)
   print("setting r complete")
   r["CRAN"] <- "$CRAN_MIRROR";
   print("setting r[CRAN] complete")
   options(repos=r);
   print("options(repos=r) complete")
   `cat $BUILD_DIR/init.r`
   print("cat $BUILD_DIR/init.r complete")
 RPROG

#cat indent

echo "R $R_VERSION successfully installed" | indent

# need to copy binaries back so that any installed packages are included in the slug
rm -rf $VENDOR_DIR && mkdir -p $VENDOR_DIR
# cp -R /app/vendor/gcc-$GCC_VERSION $VENDOR_DIR/gcc-$GCC_VERSION
# cp -R /app/vendor/glibc-$GLIBC_VERSION $VENDOR_DIR/glibc-$GLIBC_VERSION
cp -R /app/vendor/R $VENDOR_DIR/R

# HACK
# cp $VENDOR_DIR/gcc-$GCC_VERSION/lib64/* $VENDOR_DIR/R/lib64/R/lib

# remove unneeded files to make slug smaller
# pushd $VENDOR_DIR/gcc-$GCC_VERSION > /dev/null && rm -rf !(lib64) && popd > /dev/null
# pushd $VENDOR_DIR/glibc-$GLIBC_VERSION > /dev/null && rm -rf !(string|time) && popd > /dev/null
